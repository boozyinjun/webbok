pipeline {
    agent {
        label 'master'
    }

    tools {
        maven 'MAVEN3.5.0'
    }

    stages {
        stage('Build') {
            environment {
                DOCKER_HUB_USERNAME = credentials('DockerHubCreds').username
                DOCKER_HUB_PASSWORD = credentials('DockerHubCreds').password
            }

            steps {
                git branch: 'main', credentialsId: 'github-http', poll: false, url: 'https://github.com/boozyinjun/webbok.git'
                dir('apps/webbooks') {
                    sh 'mvn -DDB.url=jdbc:postgresql://158.160.127.224:5432/db_webboks package'
                }
            }

            post {
                success {
                    dir('apps/webbooks') {
                        junit '**/target/surefire-reports/TEST-*.xml'
                        archiveArtifacts 'target/*.jar'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImageName = 'webbok'
                    def dockerfilePath = 'cicd/lesson12/Dockerfile'
                    def jarFilePath = "${env.WORKSPACE}/apps/webbooks/target/*.jar"
                    def imageTag = "v1.${env.BUILD_NUMBER}"

                    sh "cp $jarFilePath ."
                    sh "docker build -t ${dockerImageName}:${imageTag} -f ${dockerfilePath} ."
                    sh "docker login -u '${DOCKER_HUB_USERNAME}' -p '${DOCKER_HUB_PASSWORD}'"
                    sh "docker push ${dockerImageName}:${imageTag}"
                }
            }
        }

        // Добавьте остальные этапы вашего пайплайна

        stage('Clean Up') {
            steps {
                script {
                    def dockerImageName = 'webbok'
                    def imageTag = "v1.${env.BUILD_NUMBER}"
                    sh "docker rmi ${dockerImageName}:${imageTag}"
                }
            }
        }
    }
}

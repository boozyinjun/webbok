pipeline {
    agent {
        label 'master'
    }

    tools {
        maven 'MAVEN3.5.0'
    }

    environment {
        IMAGE_TAG = "webbok:${env.BUILD_NUMBER}"
        DOCKER_HUB_REPO = "boozyinjun/webbok"
        DOCKER_HUB_CREDENTIALS_ID = "DockerHubCreds"
        K8S_FILES_PATH = "path/to/your/k8s/files"
        GIT_CREDENTIALS_ID = 'github-http'
        GIT_REPO_URL = 'https://github.com/boozyinjun/webbok.git'
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', credentialsId: "${GIT_CREDENTIALS_ID}", url: "${GIT_REPO_URL}"
            }
        }

        stage('Build') {
            steps {
                dir('apps/webbooks') {
                    sh 'mvn -DDB.url=jdbc:postgresql://158.160.127.224:5432/db_webboks package'
                }
            }
            post {
                success {
                    dir('apps/webbooks') {
                        junit '**/target/surefire-reports/TEST-*.xml'
                        archiveArtifacts 'target/*.jar'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "cp ${env.WORKSPACE}/apps/webbooks/target/*.jar ."
                    sh "docker build -t ${IMAGE_TAG} -f ${env.WORKSPACE}/cicd/lesson12/Dockerfile ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_CREDENTIALS_ID) {
                        sh "docker tag ${IMAGE_TAG} ${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}"
                        sh "docker push ${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}"
                        sh "docker tag ${IMAGE_TAG} ${DOCKER_HUB_REPO}:latest"
                        sh "docker push ${DOCKER_HUB_REPO}:latest"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    dir("${env.WORKSPACE}/cicd/lesson12") { // Укажите путь к файлам k8s
                        // Заменяем используемый Docker образ в файле deployment на собранный образ с тегом номера сборки
                        sh "sed -i 's|boozyinjun/webbok:latest|${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}|' k8s-deployment.yaml"
                        
                        // Используем kubeconfig для настройки доступа к Kubernetes
                        kubeconfig(credentialsId: 'k8s-service-account-token', serverUrl: 'https://10.128.0.31:6443') {
                            // Применяем измененные конфигурации Kubernetes
                            sh "kubectl apply -f k8s-deployment.yaml"
                            sh "kubectl apply -f k8s-service.yaml"
                    }
                }
            }
        }
    }
    post {
        always {
            cleanWs()
        }
    }
}

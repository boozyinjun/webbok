pipeline {
    agent {
        label 'master'
    }

    tools {
        maven 'MAVEN3.5.0'
    }

    environment {
        IMAGE_TAG = "webbok:${env.BUILD_NUMBER}"
        DOCKER_HUB_REPO = "boozyinjun/webbok" // Поменяйте на свой репозиторий в Docker Hubbbbb
        DOCKER_HUB_CREDENTIALS_ID = "DockerHubCreds" // ID для аутентификации на Docker Hubb
    }

    stages {
        stage('Build') {
            steps {
                git branch: 'main', credentialsId: 'github-http', poll: false, url: 'https://github.com/boozyinjun/webbok.git'
                dir('apps/webbooks') {
                    sh 'mvn -DDB.url=jdbc:postgresql://158.160.127.224:5432/db_webboks package'
                }
            }

            post {
                success {
                    dir('apps/webbooks') {
                        junit '**/target/surefire-reports/TEST-*.xml'
                        archiveArtifacts 'target/*.jar'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "cp ${env.WORKSPACE}/apps/webbooks/target/*.jar ."
                    sh "docker build -t ${IMAGE_TAG} -f ${env.WORKSPACE}/cicd/lesson12/Dockerfile ."
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', DOCKER_HUB_CREDENTIALS_ID) {
                        sh "docker tag ${IMAGE_TAG} ${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}"
                        sh "docker push ${DOCKER_HUB_REPO}:${env.BUILD_NUMBER}"
                        // По желанию: пушите также latest тег
                        sh "docker tag ${IMAGE_TAG} ${DOCKER_HUB_REPO}:latest"
                        sh "docker push ${DOCKER_HUB_REPO}:latest"
                    }
                }
            }
        }
    }
}

# Префикс для LAN сети
BRIDGE_NET="192.168.56."

# Домен который будем использовать для всей площадки
DOMAIN="test"

# Массив из хешей, в котором задаются настройки для каждой виртуальной машины. Вданном случае только для одной lu-centos
MACHINES = {
  :lu_ubuntu => {
    :box_name => "bento/ubuntu-20.04", # Также, можно указать URL откуда стянуть нужный box если такой есть
    :host_name => "levelup",  
    :ip_addr => BRIDGE_NET + "101",
    :cpu => 1,
    :ram => 512, # Megabytes
	# :disks => {     # Дополнительные диски
	# 	:sata1 => {
	# 		:dfile => './sata1.vdi',
	# 		:size => 250, # Megabytes
	# 		:port => 1
	# 	},
	# }
  },
  # :lu_centos => {
  #   :box_name => "centos/7", # Также, можно указать URL откуда стянуть нужный box если такой есть
  #   :host_name => "levelup",  
  #   :ip_addr => BRIDGE_NET + "102",
  #   :cpu => 1,
  #   :ram => 256, # Megabytes
	# # :disks => {     # Дополнительные диски
	# # 	:sata1 => {
	# # 		:dfile => './sata1.vdi',
	# # 		:size => 250, # Megabytes
	# # 		:port => 1
	# # 	},
	# # }
  # },
}

# Входим в Главную конфигурацию vagrant версии 2
Vagrant.configure("2") do |config|
    # Добавить шару между хостовой и гостевой машиной
    #config.vm.synced_folder "D://hostmachine/shared/folder", "/src/shara"
    
    # Отключить дефолтную шару
    #config.vm.synced_folder ".", "/vagrant", disabled: true
    
    MACHINES.each do |boxname, boxconfig|                   # Проходим по элементах массива MACHINES
        config.vm.define boxname do |box|
            box.vm.box = boxconfig[:box_name]               # Поднять машину из образа
            box.vm.host_name = boxconfig[:host_name]        # Hostname который будет присвоен VM (самой ОС)
            box.vm.usable_port_range = (2200..2250)         # Пул портов, который будет использоваться для подключения к каждый VM через 127.0.0.1
            # box.vm.network "private_network", ip: boxname[:ip], name: "VirtualBox Host-Only Ethernet Adapter" # Добавление и настройка внутреннего сетевого адаптера (Intranet)
            box.vm.network "private_network", ip: boxconfig[:ip_addr]
            # Тонкие настройки для конкретного провайдера (в нашем случае - VBoxManage)
            box.vm.provider :virtualbox do |vb|
                vb.name = boxconfig[:host_name]     # Можно перезаписать название VM в Vbox GUI
                vb.cpus = boxconfig[:cpu]
                vb.memory = boxconfig[:ram]
                # Добавление жесткого диска, если такой указан в конфигурации
                # needsController = false
		        # boxconfig[:disks].each do |dname, dconf|
			    #     unless File.exist?(dconf[:dfile])       # Не создавать диск, если он уже существует
				#     vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                #     needsController =  true
                #     end
		        # end
                # if needsController == true
                #     vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                #     boxconfig[:disks].each do |dname, dconf|
                #         vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                #     end
                # end
            end
 	    
            # Провижининг ОС настроечными скриптами
            box.vm.provision "shell", path: "scripts/setup_ssh.sh"
        end
    end
end

# vagrant ssh - использовать эту команду для подключения пользователем vagrant
# ssh root@localhost - использовать эту команду для подключения пользователем root
